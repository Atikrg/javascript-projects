//200. Building a Slider Component: Part1
//Slider
const slides = document.querySelectorAll('.slide');
//const slider = document.querySelector('.slider');
const btnLeft = document.querySelector('.slider__btn--left');
const btnRight = document.querySelector('.slider__btn--right')
/* slider.style.transform = 'scale(0.4) translateX (-800px)';
slider.style.overflow = 'visible'; */
/* slides.forEach((s, i)=>
  (s.style.transform = `translateX(${100 * i }%)`)
) */
const goToSlide = function(slide){
  slides.forEach(
    (s, i)=>(s.style.transform = `translateX(${100 * (i - slide)}%)`)
    );
};
//Next slide
const nextSlide = function(){
  if(curSlide === maxSlide - 1){
    curSlide = 0;
  }else{
      curSlide++;
    }
  goToSlide(curSlide)
};
const maxSlide = slides.length;
let curSlide = 0;


goToSlide(0);
const prevSlide = function(){
  console.log("prev btn clicked")
  if(curSlide === 0){
    curSlide = maxSlide - 1;
  }else{
    curSlide--;   
  }
  goToSlide(curSlide);
}
//btnRight
btnRight.addEventListener('click', nextSlide);
//btnLeft
btnLeft.addEventListener('click', prevSlide);

//200. Building a Slider Component: Part1 && //201. Building a Slider Component: Part2
//Slider
const slides = document.querySelectorAll('.slide');
const dotContainer = document.querySelector('.dots');
//const slider = document.querySelector('.slider');
const btnLeft = document.querySelector('.slider__btn--left');
const btnRight = document.querySelector('.slider__btn--right')
/* slider.style.transform = 'scale(0.4) translateX (-800px)';
slider.style.overflow = 'visible'; */
/* slides.forEach((s, i)=>
  (s.style.transform = `translateX(${100 * i }%)`)
) */
const createDots = function(){
  slides.forEach(function(_, i){
    dotContainer.insertAdjacentHTML('beforeend',
    `<button class = "dots__dot" data-slide="${i}"></button>`
    );
    
  })
}
const activateDot = function(slide){
  document.querySelectorAll('.dots__dot')
  .forEach(
    dot=> 
    dot.classList.remove('dots__dot--active')
    );
    
  document.querySelector(`.dots__dot[data-slide="${slide}"]`)
  .classList.add('dots__dot--active');
}
const goToSlide = function(slide){
  slides.forEach(
    (s, i)=>(s.style.transform = `translateX(${100 * (i - slide)}%)`)
    );
};
//Next slide
const nextSlide = function(){
  if(curSlide === maxSlide - 1){
    curSlide = 0;
  }else{
      curSlide++;
    }
  goToSlide(curSlide)
  activateDot(curSlide);
};
const maxSlide = slides.length;
let curSlide = 0;
const prevSlide = function(){
  console.log("prev btn clicked")
  if(curSlide === 0){
    curSlide = maxSlide - 1;
  }else{
    curSlide--;   
  }
  goToSlide(curSlide);
  activateDot(curSlide);
}
const init = function(){
  createDots(0);
  goToSlide(0);
  activateDot(0);
}
init();
//btnRight
btnRight.addEventListener('click', nextSlide);
//btnLeft
btnLeft.addEventListener('click', prevSlide);
document.addEventListener('keydown', function(e){
  //console.log(e);
  if(e.key === "ArrowLeft") prevSlide();
  e.key === 'ArrowRight' && nextSlide();
});
dotContainer.addEventListener('click', function(e){
  if(e.target.classList.contains('dots__dot')){
    //console.log('DOT');
    const {slide} = e.target.dataset;
    goToSlide(slide);
    activateDot(slide);
  }
});

//187.
1. getAttribute -> dom method
2. setAttribute -> dom method
3. getComputedStyle -> dom method
4.  Use get Attribute method
    a- console.log(link.getAttribute('href'))
    b- console.log(link.href);
- [ 
    here both a and b are different make sure 
    to use a- method
]

5. Data attributes

These type of attribute starts with number 
data-version-number = 3.0

6. Only one class can be on element
new- logo.classList.contains('c');

8. console.log(logo.dataset.versionNumber);

//189
1. h1.onmouseenter = function(e){
    alert("your way")
}
2. mouseenter -> like hover similar to click

//190
//Event Propagation: Bubbling and Capturing
[]e.target , e.currentTarget => current element
